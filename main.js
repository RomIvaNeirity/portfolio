

let currentLang = localStorage.getItem("lang") || "en";  // –ó—á–∏—Ç—É—î–º–æ –º–æ–≤—É –∞–±–æ —Å—Ç–∞–≤–∏–º–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
let translations = {};  // –°—é–¥–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–º–æ –æ–±—Ä–∞–Ω–∏–π JSON

// –§—É–Ω–∫—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è JSON –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
async function loadTranslations(lang) {
  try {
    const res = await fetch(`./lang/${lang}.json`);
    translations = await res.json();
    currentLang = lang;

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–æ–≤—É –≤ localStorage, —â–æ–± –Ω–µ –∑–±–∏–≤–∞–ª–∞—Å—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    localStorage.setItem("lang", lang);

    // –ú—ñ–Ω—è—î–º–æ –∞—Ç—Ä–∏–±—É—Ç lang —É <html>, —Ü–µ –∫–æ—Ä–∏—Å–Ω–æ –¥–ª—è SEO —Ç–∞ accessibility
    document.documentElement.setAttribute("lang", lang);

    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
    updateTexts();
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—É:", err);
  }
}

// –§—É–Ω–∫—Ü—ñ—è –∑–∞–º—ñ–Ω–∏ —Ç–µ–∫—Å—Ç—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
function updateTexts() {
  document.querySelectorAll("[data-i18n]").forEach(el => {
    const key = el.getAttribute("data-i18n");
    if (translations[key]) {
      el.textContent = translations[key];
    }
  });
}

// –û–±—Ä–æ–±–Ω–∏–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è
document.getElementById("lang-uk").addEventListener("click", () => loadTranslations("uk"));
document.getElementById("lang-en").addEventListener("click", () => loadTranslations("en"));

// –ü—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
loadTranslations(currentLang);


// -----------------------
// –¢–ï–ú–ò
// -----------------------

const themeToggleBtn = document.getElementById("theme-toggle");

// –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É —Ç–µ–º—É
function initTheme() {
  const savedTheme = localStorage.getItem("theme");
  
  if (savedTheme) {
    setTheme(savedTheme);
  } else {
    // –Ø–∫—â–æ –Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ ‚Äî –¥–∏–≤–∏–º–æ—Å—å –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—É —Ç–µ–º—É
    const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
    setTheme(prefersDark ? "light" : "dark");
  }
}

// –§—É–Ω–∫—Ü—ñ—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ç–µ–º–∏
function setTheme(theme) {
  if (theme === "dark") {
    document.body.classList.add("dark-theme");
  } else {
    document.body.classList.remove("dark-theme");
  }
  localStorage.setItem("theme", theme);
  updateThemeButton(theme);
}

// –û–Ω–æ–≤–ª—é—î–º–æ —ñ–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏
function updateThemeButton(theme) {
  themeToggleBtn.textContent = theme === "dark" ? "üåû" : "üåô";
}

// –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É
themeToggleBtn.addEventListener("click", () => {
  const newTheme = document.body.classList.contains("dark-theme") ? "light" : "dark";
  setTheme(newTheme);
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–µ–º–∏ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
initTheme();

 AOS.init({offset: 280, // offset (in px) from the original trigger point
     delay: 0,
     duration: 1000,
     easing: 'ease-in-out'
 })
 

const listItems = document.querySelectorAll('.projects-list .projects-list-item');
  const rectangleTexts = document.querySelectorAll('.decor-rectangle-1 p');

 
  listItems.forEach((item, index) => {
  item.addEventListener('mouseenter', () => {
    rectangleTexts.forEach(p => p.classList.remove('active', 'aos-animate'));
    if (rectangleTexts[index]) {
      const textEl = rectangleTexts[index];
      textEl.classList.add('active');
      // –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é AOS –≤—Ä—É—á–Ω—É
      setTimeout(() => {
        textEl.classList.add('aos-animate');
      }, 10);
    }
  });
});
document.addEventListener('click', (e) => {
  const listContainer = document.querySelector('.projects-list');
  const rectContainer = document.querySelector('.decor-rectangle-1');

  const clickedInsideList = listContainer.contains(e.target);
  const clickedInsideRectangle = rectContainer.contains(e.target);

  // –Ø–∫—â–æ –∫–ª—ñ–∫ –Ω–µ –ø–æ —Å–ø–∏—Å–∫—É —ñ –Ω–µ –ø–æ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫—É ‚Üí —Ö–æ–≤–∞—î–º–æ —Ç–µ–∫—Å—Ç–∏
  if (!clickedInsideList && !clickedInsideRectangle) {
    rectangleTexts.forEach(p => {
      p.classList.remove('active', 'aos-animate');
    });
  }
});
